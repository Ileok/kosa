package springBootTest2.service.library;

import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.multipart.MultipartFile;

import springBootTest2.command.LibraryCommand;
import springBootTest2.domain.AuthInfo;
import springBootTest2.domain.LibraryDTO;
import springBootTest2.mapper.LibraryMapper;
@Component
@Service
public class LibraryModifyService {
	@Autowired
	LibraryMapper libraryMapper;
	public String execute(Integer libNum, String libPw, Model model,
			HttpSession session, LibraryCommand libraryCommand) {
		String path = "thymeleaf/lib/libModify";
		AuthInfo authInfo = (AuthInfo)session.getAttribute("authInfo");
		LibraryDTO dto = libraryMapper.selectOne(libNum);
		model.addAttribute("dto", dto);
		if(!dto.getLibPw().equals(libPw) || 
				!dto.getMemId().equals(authInfo.getUserId())) {
			model.addAttribute("err_pw","비밀번호가 틀리거나 작성자가 아닙니다.");
			path = "thymeleaf/lib/libInfo";
		} else {
			dto.setLibContent(libraryCommand.getLibContent());
			dto.setLibNum(libraryCommand.getLibNum());
			dto.setLibSubject(libraryCommand.getLibSubject());
			dto.setLibWriter(libraryCommand.getLibWriter());
			for (MultipartFile mf : libraryCommand.getReport()) {
				String originalFile = mf.getOriginalFilename();
				String extension = originalFile.substring(originalFile.lastIndexOf("."));
				String storeName = UUID.randomUUID().toString().replace("-", "");
				String fileSize = Long.toString(mf.getSize());
				String filePath = "/view/lib";
				String fileDir = session.getServletContext().getRealPath(filePath);
			}
		}
		return path;
	}
}